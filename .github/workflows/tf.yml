name: terraform

on: pull_request

env:
  TF_VERSION: 0.12.26

jobs:
  terraform:
    strategy:
      matrix:
        workspace: [staging]

    name: ${{ matrix.workspace }}
    runs-on: ubuntu-latest

    env:
      WORKSPACE: ${{ matrix.workspace }}

    steps:
      - name: Generate tfvars Path 
        id: tfvars
        run: |
            echo "::set-output name=tfvars_file::tfvars/${WORKSPACE}.tfvars"
      - name: Checkout
        uses: actions/checkout@1.0.0
        with:
          submodules: 'false'

      - name: Setup GCP Credentials
        run: |
          # Setup the credentials in the workspace because everything in terraform is
          # driven off profiles
          pip3 install --upgrade pip setuptools
          pip3 install ansible-vault
          curl -sSL https://sdk.cloud.google.com | bash
          echo "${{ secrets.SERVICEACCOUNT }}" > secret.txt
          ansible-vault decrypt serviceaccount.json --vault-password-file secret.txt
          # printf "${{ secrets.SERVICEACCOUNT }}" # > ./creds.json
      - name: Terraform Format
        uses: autotune/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: fmt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}

      - name: Terraform Init
        uses: autotune/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: init
          args: --backend-config=backend/backend.tf -backend-config backend/backend.tfvars
        env:
          TF_WORKSPACE: ${{ env.WORKSPACE }}
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}

      - name: Terraform Validate
        uses: autotune/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: validate
        env:
          TF_WORKSPACE: ${{ env.WORKSPACE }}
          AWS_SHARED_CREDENTIALS_FILE: .aws/credentials
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}

      - name: Terraform Plan
        id: terraform-plan
        uses: autotune/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: plan
          args: -var-file backend/backend.tfvars -var-file ${{ steps.tfvars.outputs.tfvars_file }}
        env:
          TF_WORKSPACE: ${{ env.WORKSPACE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOOGLE_APPLICATION_CREDENTIALS: "serviceaccount.json"

      - name: Terraform Apply
        id: terraform-apply
        uses: autotune/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: apply
          args: -var-file backend/backend.tfvars -var-file ${{ steps.tfvars.outputs.tfvars_file }}
        env:
          TF_WORKSPACE: ${{ env.WORKSPACE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOOGLE_APPLICATION_CREDENTIALS: "serviceaccount.json"

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v1
        with:
          name: terraform-${{ env.WORKSPACE }}
          path: ${{ steps.terraform-plan.outputs.tf_actions_plan_output_file }}

      - name: Cleanup GCP Credentials
        run: |
          rm -rf ./creds.json
